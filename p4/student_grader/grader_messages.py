"""
These messages are printed out below the grader.check cell after it runs.
"""

# Gets printed when anything goes wrong with accessing the gpt220 service
GET_LLM_FEEDBACK_FAILED_MSG = """Error, failed to reach server for feedback.
This will not affect your grade. Please continue working on the assignment
and notify course staff about this issue."""

# Appears whenever student has added code cells into a question block
# TODO: use this message
ADDED_CODE_MESSAGE = """Please check the above cells. Question blocks
should always have the following format: Points possible cell, your
code cell, grader check cell. Make sure you have not added any extra
cells within any blocks in this notebook. If you need to create another
code cell, please do so outside of the question block. If you modify
cells, save the notebook before running the check function again."""

# Appears whenever student grader could not find q_id in assignment metadata
FAILED_FIND_QID_IN_METADATA_FORMAT = """Could not find key {q_id} in {metadata_file_name}.
Please make sure you have not modified this grader.check cell or the metadata file.
If you haven't modified this grader.check cell, try re-downloading the metadata file.
Seek assistance from course staff afterward if you are still running into issues."""

# The message to print above any feedback generated by the LLM
# SHARED with master_grader
LLM_FEEDBACK_SECTION_HEADER = "Potentially helpful AI-generated feedback:"

# The message format to print immediately after grader.check is called. Formatted with q_id
# SHARED with master_grader
CHECK_START_FORMAT = (
    "Make sure you saved the notebook before running this cell. Running check for {}..."
)

# The message to print below any errors or warnings that resulted from
# running cells above the current question
# SHARED with master_grader
ISSUES_ABOVE_MSG = "\nThere are issues in the cells above this question. These must be resolved before this check can run."

# Appears at start of bullet point in errors section to prefix exceptions caused by student code.
# Example: - Exception occurred: invalid syntax (<string>, line 1)
# SHARED with master_grader
CUR_QUESTION_ERROR_PREFIX = "Exception occurred: "

# The message format to print in the errors section when a student has
# not defined a required variable.
# SHARED with master_grader
MISSED_REQ_VAR_FORMAT = "Student code does not define required variable: {}"

# The message format to print in the errors section when a student has
# not called a required function
# SHARED with master_grader
MISSED_REQ_FUNC_FORMAT = "Student code does not use: {}"

# Appears at start of bullet point in errors section before the assertion
# error message. Example: - Test case failed: division by zero
# SHARED with master_grader
ASSERTION_FAILED_PREFIX = "Test case failed: "

# The message to print when the student's code for a question meets all requirements
# SHARED with master_grader
SUCCESS_MSG = "Great job! You passed all test cases for this question."

# Appears at start of bullet point in errors section when an error occured
# in an above cell. Example: - Error in above cell: division by zero
# SHARED with master_grader
ABOVE_QUESTION_ERROR_PREFIX = "Error in above cell: "
